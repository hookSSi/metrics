name: CI testing - base

# see: https://help.github.com/en/actions/reference/events-that-trigger-workflows
on:  # Trigger the workflow on push or pull request, but only for the master branch
  push:
    branches: [master, "release/*"]
  pull_request:
    branches: [master, "release/*"]

defaults:
  run:
    shell: bash

jobs:

  doctest:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2019, macOS-10.15]
        python-version: [3.7]
    env:
      PYTEST_ARTEFACT: pytest-results-${{ matrix.os }}-${{ matrix.python-version }}
      PYTORCH_URL: https://download.pytorch.org/whl/cpu/torch_stable.html
    # Timeout: https://stackoverflow.com/a/59076067/4521646
    timeout-minutes: 20

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    # Github Actions: Run step on specific OS: https://stackoverflow.com/a/57948488/4521646
    - name: Setup macOS
      if: runner.os == 'macOS'
      run: |
        brew install libomp  # https://github.com/pytorch/pytorch/issues/20030

    - uses: ./.github/actions/caching
      with:
        os: ${{ runner.os }}
        offset: "tiny"
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python --version
        pip --version
        pip install --requirement requirements.txt --upgrade --find-links $PYTORCH_URL
        pip install --requirement requirements/test.txt --upgrade --find-links $PYTORCH_URL
        pip uninstall -y torchmetrics
        pip list

    - name: Test Package [only]
      run: |
        # NOTE: run coverage on tests does not propagare faler status for Win, https://github.com/nedbat/coveragepy/issues/1003
        python -m pytest torchmetrics -v --cov=torchmetrics --junitxml="junit/$PYTEST_ARTEFACT"

    - name: Upload pytest test results
      uses: actions/upload-artifact@v2
      with:
        name: $PYTEST_ARTEFACT
        path: "junit/$PYTEST_ARTEFACT"
      if: failure()

    - name: Statistics
      if: success()
      run: |
        coverage report
        coverage xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      if: always()
      # see: https://github.com/actions/toolkit/issues/399
      continue-on-error: true
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: coverage.xml
        flags: cpu,pytest,${{ runner.os }}
        name: Base-coverage
        fail_ci_if_error: false
