name: Install pkg

# see: https://help.github.com/en/actions/reference/events-that-trigger-workflows
on:  # Trigger the workflow on push or pull request, but only for the master branch
  push:
    branches: [master, "release/*"]
  pull_request:
    branches: [master, "release/*"]

jobs:
  pkg-check:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Check package
        run: |
          pip install check-manifest
          check-manifest
          python setup.py check --metadata --strict

      - name: Create package
        run: |
          pip install --upgrade setuptools wheel
          python setup.py sdist

      - name: Verify package
        run: |
          pip install twine==3.2
          twine check dist/*
          python setup.py clean

  pkg-install:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macOS-10.15 , windows-2019]
        python-version: [3.7]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Prepare env
        run: |
          pip install check-manifest "twine==3.2" setuptools wheel

      - name: Create package
        run: |
          check-manifest
          # python setup.py check --metadata --strict
          python setup.py sdist bdist_wheel

      - name: Setup Windows
        if: runner.os == 'windows'
        run: |
          # this is just a hotfix because of Win cannot install it directly
          pip install -r requirements.txt --find-links https://download.pytorch.org/whl/cpu/torch_stable.html

      - name: Install | Uninstall package - archive
        working-directory: dist
        run: |
          # install as archive
          pip install *.tar.gz
          python -c "import torchmetrics ; print(torchmetrics.__version__)"
          pip uninstall -y torchmetrics

      - name: Install | Uninstall package - wheel
        working-directory: dist
        run: |
          # install as wheel
          pip install *.whl
          python -c "import torchmetrics ; print(torchmetrics.__version__)"
          pip uninstall -y torchmetrics
